name: Quality Gate

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  # 1️⃣ Setup Node + pnpm + install dependencies
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-pnpm.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4

      # Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # Install pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.1.0

      # Install dependencies
      - run: pnpm install --frozen-lockfile

      # Optional: Cache pnpm store
      - name: Cache pnpm store
        id: cache-pnpm
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

  # 2️⃣ Lint
  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.1.0
      - run: pnpm lint
      - run: pnpm format:check

  # 3️⃣ Type-check
  type-check:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.1.0
      - run: pnpm tsc --noEmit

  # 4️⃣ Run tests
  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.1.0
      - run: pnpm test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: always()
        with:
          fail_ci_if_error: false

  # 5️⃣ Build project
  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.1.0
      - run: pnpm build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

  # 6️⃣ Security scan
  security-scan:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.1.0
      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@v3.90.5
        with:
          path: .
          github_token: ${{ secrets.GITHUB_TOKEN }}
          extra_args: --only-verified --fail
      - name: Run pnpm audit
        run: pnpm audit --audit-level=moderate
        continue-on-error: true

  # 7️⃣ CodeQL analysis
  codeql:
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript
          queries: security-extended,security-and-quality
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3

  # 8️⃣ Final quality gate summary
  quality-gate:
    runs-on: ubuntu-latest
    needs: [lint, type-check, test, build, security-scan, codeql]
    if: always()
    steps:
      - name: Check all jobs status
        run: |
          echo "Lint: ${{ needs.lint.result }}"
          echo "Type Check: ${{ needs.type-check.result }}"
          echo "Test: ${{ needs.test.result }}"
          echo "Build: ${{ needs.build.result }}"
          echo "Security Scan: ${{ needs.security-scan.result }}"
          echo "CodeQL: ${{ needs.codeql.result }}"
          
          if [[ "${{ needs.lint.result }}" != "success" || 
                "${{ needs.type-check.result }}" != "success" || 
                "${{ needs.test.result }}" != "success" || 
                "${{ needs.build.result }}" != "success" || 
                "${{ needs.security-scan.result }}" != "success" || 
                "${{ needs.codeql.result }}" != "success" ]]; then
            echo "❌ Quality gate failed"
            exit 1
          else
            echo "✅ Quality gate passed"
